{"version":3,"sources":["logic/calculate.js","components/Button.js","components/img/add.svg","components/img/subtract.svg","components/img/multiply.svg","components/img/divide.svg","components/GridSquare.js","components/img/check.svg","components/Popup.js","logic/generatePuzzle.js","components/SumPuzzle.js","index.js"],"names":["calculateRow","arr","i","length","eval","join","trim","getCol","map","x","calculateCol","calculateRowSums","size","rowSums","j","original","sum","Math","floor","push","calculateColSums","colSums","col","Button","handleClick","props","className","this","green","onClick","text","React","Component","GridSquare","input","focus","handleInput","event","row","target","value","readOnly","operation","src","addIcon","subtractIcon","multiplyIcon","divideIcon","type","maxLength","puzzleSize","ref","inp","onChange","white","greenText","redText","content","renderContent","Popup","toggle","check","generatePuzzle","numbers","random","symbols","evalArr","innerArr","shift","calc","SumPuzzle","initializeGrid","copy","grid","inner","puzzle","setState","state","r","c","isPuzzleComplete","isPuzzleCorrect","popupVisible","togglePopup","newGame","isRowComplete","isRowCorrect","isColComplete","isColCorrect","isPuzzleValid","gridSet","Set","add","end","colCorrect","colIncorrect","rowCorrect","rowIncorrect","renderSquare","href","ReactDOM","render","document","getElementById"],"mappings":"2JAGO,SAASA,aAAaC,IAAKC,GAChC,OAAIA,GAAKD,IAAIE,OACJ,EAEFC,KAAKH,IAAIC,GAAGG,KAAK,KAAKC,QAMxB,SAASC,OAAON,EAAKC,GAC1B,OAAIA,GAAKD,EAAIE,OACJ,KAEFF,EAAIO,KAAI,SAAAC,GAAC,OAAIA,EAAEP,MAMjB,SAASQ,aAAaT,IAAKC,GAChC,OAAIA,GAAKD,IAAIE,OACJ,EAEFC,KAAKG,OAAON,IAAKC,GAAGG,KAAK,KAAKC,QAMhC,SAASK,iBAAiBV,EAAKW,GAEpC,IADA,IAAIC,EAAU,GACLX,EAAI,EAAGA,EAAU,EAALU,EAAQ,EAAGV,IAC9B,GAAIA,EAAE,IAAI,EAAG,CAEX,IAAK,IAAIY,EAAI,EAAGA,EAAIb,EAAIE,OAAQW,GAAG,EACjC,GAAkB,MAAdb,EAAIC,GAAGY,IAA4B,MAAdb,EAAIC,GAAGY,IAA4B,MAAdb,EAAIC,GAAGY,GAAY,CAC/D,IAAIC,EAAWd,EAAIC,GAAGY,GACtBb,EAAIC,GAAGY,GAAK,IACZ,IAAIE,EAAMhB,aAAaC,EAAKC,GACxBc,EAAMC,KAAKC,MAAMF,KAAS,IAC5Bf,EAAIC,GAAGY,GAAKC,GAGlBF,EAAQM,KAAKnB,aAAaC,EAAKC,IAGnC,OAAOW,EAMF,SAASO,iBAAiBnB,EAAKW,GAEpC,IADA,IAAIS,EAAU,GACLnB,EAAI,EAAGA,EAAU,EAALU,EAAQ,EAAGV,IAC9B,GAAIA,EAAE,IAAI,EAAG,CAEX,IADA,IAAIoB,EAAMf,OAAON,EAAKC,GACbY,EAAI,EAAGA,EAAIQ,EAAInB,OAAQW,GAAG,EACjC,GAAe,MAAXQ,EAAIR,IAAyB,MAAXQ,EAAIR,IAAyB,MAAXQ,EAAIR,GAAY,CACtD,IAAIC,EAAWO,EAAIR,GACnBb,EAAIa,GAAGZ,GAAK,IACZ,IAAIc,EAAMN,aAAaT,EAAKC,GACxBc,EAAMC,KAAKC,MAAMF,KAAS,IAC5Bf,EAAIa,GAAGZ,GAAKa,GAGlBM,EAAQF,KAAKT,aAAaT,EAAKC,IAGnC,OAAOmB,EAzET,6U,kOCIqBE,E,4MAOnBC,YAAc,WACZ,EAAKC,MAAMD,e,4CAGb,WACE,IAAME,EAAY,CAChB,mBACAC,KAAKF,MAAMG,MAAQ,QAAU,OAG/B,OACE,qBAAKF,UAAWA,EAAUrB,KAAK,KAAKC,OAApC,SACE,wBAAQuB,QAASF,KAAKH,YAAtB,SACGG,KAAKF,MAAMK,a,GApBcC,IAAMC,WCJ3B,G,MAAA,IAA0B,iCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,mCCQpBC,E,4MAenBT,YAAc,WACc,qBAAf,EAAKU,OACd,EAAKA,MAAMC,S,EAGfC,YAAc,SAACC,GACb,EAAKZ,MAAMW,YAAY,EAAKX,MAAMa,IAAK,EAAKb,MAAMH,IAAKe,EAAME,OAAOC,Q,mDAGtE,WAAiB,IAAD,OACd,OAAIb,KAAKF,MAAMgB,SACTd,KAAKF,MAAMiB,UAEX,qBAAKhB,UAAU,YAAf,SACE,qBAAKiB,IAAwB,MAAnBhB,KAAKF,MAAMe,MAAcI,EACN,MAAnBjB,KAAKF,MAAMe,MAAcK,EACN,MAAnBlB,KAAKF,MAAMe,MAAcM,EACzBC,MAKd,qBAAKrB,UAAU,OAAf,SACGC,KAAKF,MAAMe,QAKd,uBAAOQ,KAAK,OACVC,UAAmC,IAAxBtB,KAAKF,MAAMyB,WAAiB,EAAI,EAC3CC,IAAK,SAACC,GAAD,OAAS,EAAKlB,MAAQkB,GAC3B1B,UAAmC,IAAxBC,KAAKF,MAAMyB,WAAiB,eAAiB,eACxDG,SAAU1B,KAAKS,YACfI,MAAOb,KAAKF,MAAMK,S,oBAM1B,WACE,IAAMJ,EAAY,CAChB,wBACAC,KAAKF,MAAM6B,MAAQ,QAAU,QAC7B3B,KAAKF,MAAMgB,SAAW,GAAK,QAC3Bd,KAAKF,MAAM8B,UAAY,aAAe,GACtC5B,KAAKF,MAAM+B,QAAU,WAAa,IAGhCC,EAAU9B,KAAK+B,gBAEnB,OACE,qBAAKhC,UAAWA,EAAUrB,KAAK,KAAKC,OAAQuB,QAASF,KAAKH,YAA1D,SACE,qBAAKE,UAAU,UAAf,SACE,qBAAKA,UAAU,iBAAf,SACG+B,Y,GArE2B1B,IAAMC,WCR/B,G,MAAA,IAA0B,mCCKpB2B,E,4MAMnBnC,YAAc,WACZ,EAAKC,MAAMmC,U,4CAGb,WACE,OACE,qBAAKlC,UAAU,QAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,QAAQG,QAASF,KAAKH,YAAtC,kBAAiE,uBACjE,qBAAKE,UAAU,aAAf,SACE,qBAAKiB,IAAKkB,MAEZ,4BAAIlC,KAAKF,MAAMK,gB,GAlBUC,IAAMC,W,OCA1B,SAAS8B,EAAelD,GAErC,IADA,IAAImD,EAAU,GACL7D,EAAI,EAAGA,EAAIU,EAAKA,EAAMV,IAC7B6D,EAAQ5C,KAAKjB,EAAE,GAGjB,IAAK,IAAIA,EAAI6D,EAAQ5D,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC3C,IAAMY,EAAIG,KAAKC,MAAMD,KAAK+C,UAAY9D,EAAE,IADG,EAEhB,CAAC6D,EAAQjD,GAAIiD,EAAQ7D,IAA/C6D,EAAQ7D,GAFkC,KAE9B6D,EAAQjD,GAFsB,KAO7C,IAFA,IAAImD,EAAU,CAAC,IAAK,IAAK,IAAK,KAC1BC,EAAU,GACLhE,EAAI,EAAGA,EAAU,EAALU,EAAQ,EAAGV,IAAK,CAEnC,IADA,IAAIiE,EAAW,GACNrD,EAAI,EAAGA,EAAU,EAALF,EAAQ,EAAGE,IAC1BA,EAAE,IAAI,GAAKZ,EAAE,IAAI,EACnBiE,EAAShD,KAAK4C,EAAQK,SACdtD,EAAE,IAAI,GAAKZ,EAAE,IAAI,GAAOY,EAAE,IAAI,GAAKZ,EAAE,IAAI,EACjDiE,EAAShD,KAAK8C,EAAQhD,KAAKC,MAAsB,EAAhBD,KAAK+C,YAEtCG,EAAShD,KAAK,IAElB+C,EAAQ/C,KAAKgD,GAMf,MAAQ,CACNlE,IAAKiE,EACLrD,QALYwD,IAAsBH,EAAStD,GAM3CS,QALYgD,IAAsBH,EAAStD,I,ICxB1B0D,E,kDACnB,WAAY7C,GAAQ,IAAD,8BACjB,cAAMA,IAcR8C,eAAiB,WAGf,IAFA,IAAIC,GAAO,EACPC,EAAO,GACFvE,EAAI,EAAGA,EAAc,EAAV,EAAKU,KAAO,EAAGV,IAAK,CAEtC,IADA,IAAIwE,EAAQ,GACH5D,EAAI,EAAGA,EAAc,EAAV,EAAKF,KAAO,EAAGE,IAE/B4D,EAAM5D,GADJ0D,EACS,EAAKG,OAAO1E,IAAIC,GAAGY,GAEnB,GACb0D,GAAQA,EAEVC,EAAKtD,KAAKuD,GAEZ,EAAKE,SAAS,CAACH,KAAMA,KA7BJ,EAgCnBrC,YAAc,SAACE,EAAKhB,EAAKkB,GACvB,EAAKoC,SAAS,CACZH,KAAM,EAAKI,MAAMJ,KAAKjE,KAAI,SAACsE,EAAG5E,GAAJ,OAAU4E,EAAEtE,KAAI,SAACuE,EAAGjE,GAC5C,OAAOZ,IAAIoC,GAAOxB,IAAIQ,EAAMkB,EAAQuC,UAErC,WACG,EAAKC,oBAAsB,EAAKC,mBAClC,EAAKL,SAAS,CAACM,cAAc,QAvChB,EA2CnBC,YAAc,WACZ,EAAKP,SAAS,CAACM,cAAe,EAAKL,MAAMK,gBA5CxB,EA+CnBE,QAAU,WACR,EAAKR,SAAS,CAACH,KAAM,KACrB,EAAK7D,KAAO,EACZ,EAAK+D,OAASb,EAAe,GAC7B,EAAKS,kBAnDY,EAsDnBc,cAAgB,SAAC/C,GACf,GAAoC,qBAAzB,EAAKuC,MAAMJ,KAAKnC,GACzB,OAAO,EAET,IAAK,IAAIpC,EAAI,EAAGA,EAAI,EAAK2E,MAAMJ,KAAKnC,GAAKnC,OAAQD,IAC/C,IAAK,EAAK2E,MAAMJ,KAAKnC,GAAKpC,GACxB,OAAO,EAEX,OAAO,GA9DU,EAiEnBoF,aAAe,SAAChD,GACd,OAAOtC,YAAa,EAAK6E,MAAMJ,KAAMnC,KAAS,EAAKqC,OAAO9D,QAAQyB,EAAI,IAlErD,EAqEnBiD,cAAgB,SAACjE,GACf,IAAK,IAAIpB,EAAI,EAAGA,EAAI,EAAK2E,MAAMJ,KAAKtE,OAAQD,IAC1C,IAAK,EAAK2E,MAAMJ,KAAKvE,GAAGoB,GACtB,OAAO,EAEX,OAAO,GA1EU,EA6EnBkE,aAAe,SAAClE,GACd,OAAOZ,YAAa,EAAKmE,MAAMJ,KAAMnD,KAAS,EAAKqD,OAAOtD,QAAQC,EAAI,IA9ErD,EAiFnB0D,iBAAmB,WACjB,IAAK,IAAI9E,EAAI,EAAGA,EAAc,EAAV,EAAKU,KAAO,EAAGV,GAAG,EACpC,IAAK,EAAKmF,cAAcnF,KAAO,EAAKqF,cAAcrF,GAChD,OAAO,EAEX,OAAO,GAtFU,EAyFnBuF,cAAgB,WAEd,IADA,IAAMC,EAAU,IAAIC,IACXzF,EAAI,EAAGA,EAAc,EAAV,EAAKU,KAAO,EAAGV,GAAI,EACrC,IAAK,IAAIY,EAAI,EAAGA,EAAc,EAAV,EAAKF,KAAO,EAAGE,GAAG,EAChC,EAAK+D,MAAMJ,KAAKvE,GAAGY,GAAK,GAAK,EAAK+D,MAAMJ,KAAKvE,GAAGY,IAAM,EAAKF,KAAK,EAAKA,MACvE8E,EAAQE,IAAI,EAAKf,MAAMJ,KAAKvE,GAAGY,IAIrC,OAAI4E,EAAQ9E,MAAQ,EAAKA,KAAK,EAAKA,MAlGlB,EAwGnBqE,gBAAkB,WAChB,IAAK,IAAI/E,EAAI,EAAGA,EAAc,EAAV,EAAKU,KAAO,EAAGV,GAAG,EAAG,CACvC,IAAK,EAAKmF,cAAcnF,KAAO,EAAKqF,cAAcrF,GAChD,OAAO,EACT,IAAK,EAAKoF,aAAapF,KAAO,EAAKsF,aAAatF,GAC9C,OAAO,EAEX,OAAO,EAAKuF,iBA7GZ,EAAK7E,KAAO,EACZ,EAAK+D,OAASb,EAAe,GAE7B,EAAKe,MAAQ,CACXJ,KAAM,GACNS,cAAc,GAPC,E,qDAWnB,WACEvD,KAAK4C,mB,0BAsGP,SAAajC,EAAKhB,GAChB,IAAIuE,EAA4B,qBAAdlE,KAAKf,KAAuB,EAAc,EAAVe,KAAKf,KAAO,EAC1DkB,EAAO,GACoB,qBAApBH,KAAKgD,OAAO1E,MACjBqB,EAAMuE,GAAOvD,EAAMuD,IACrB/D,EAAOH,KAAKgD,OAAO1E,IAAIqC,GAAKhB,IAC1BA,IAAQuE,GAAOvD,EAAI,IAAM,IAC3BR,EAAO,IAAMH,KAAKgD,OAAO9D,QAAQI,KAAKC,MAAMoB,EAAI,KAC9CA,IAAQuD,GAAOvE,EAAI,IAAM,IAC3BQ,EAAO,IAAMH,KAAKgD,OAAOtD,QAAQJ,KAAKC,MAAMI,EAAI,MAGpD,IAAIwE,EAAcxD,IAAMuD,GAAOlE,KAAK4D,cAAcjE,IAAQK,KAAK6D,aAAalE,GACxEyE,EAAgBzD,IAAMuD,GAAOlE,KAAK4D,cAAcjE,KAASK,KAAK6D,aAAalE,GAC3E0E,EAAc1E,IAAMuE,GAAOlE,KAAK0D,cAAc/C,IAAQX,KAAK2D,aAAahD,GACxE2D,EAAgB3E,IAAMuE,GAAOlE,KAAK0D,cAAc/C,KAASX,KAAK2D,aAAahD,GAE/E,OAAO,cAAC,EAAD,CAELA,IAAKA,EACLhB,IAAKA,EACLgC,MAAOhB,IAAMuD,GAAOvE,IAAMuE,IAAQvD,EAAI,IAAM,GAAKhB,EAAI,IAAM,GAC3DkB,MAAO,GAAGV,EACVW,SAAUH,EAAI,IAAI,GAAKhB,EAAI,IAAI,EAC/BoB,UAAWJ,IAAMuD,GAAOvE,IAAMuE,IAASvD,EAAI,IAAI,GAAKhB,EAAI,IAAI,GAAOgB,EAAI,IAAI,GAAKhB,EAAI,IAAI,GACxF4B,WAAYvB,KAAKf,KACjBwB,YAAaT,KAAKS,YAClBmB,UAAWuC,GAAcE,EACzBxC,QAASuC,GAAgBE,EACzBnE,KAAsC,qBAAzBH,KAAKkD,MAAMJ,KAAKnC,GAAuB,GAAKX,KAAKkD,MAAMJ,KAAKnC,GAAKhB,IAXzE,KAAKgB,EAAI,IAAIhB,K,oBAetB,WAEE,IADA,IAAMmD,EAAO,GACJvE,EAAI,EAAGA,EAAI,EAAGA,IACrB,IAAK,IAAIY,EAAI,EAAGA,EAAI,EAAGA,IACrB2D,EAAKtD,KAAKQ,KAAKuE,aAAahG,EAAGY,IAGnC,OACE,gCACGa,KAAKkD,MAAMK,aAAe,cAAC,EAAD,CAAOpD,KAAK,mCAAmC8B,OAAQjC,KAAKwD,cAAiB,KACxG,sBAAKzD,UAAU,cAAf,UACE,qBAAKA,UAAU,iBACf,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,EAAD,CAAQI,KAAM,WAAYN,YAAaG,KAAKyD,QAASxD,OAAO,MAE9D,qBAAKF,UAAU,mBAAf,SACE,mBAAGyE,KAAK,aAAR,SAAqB,cAAC,EAAD,CAAQrE,KAAM,cAAeF,OAAO,WAG7D,qBAAKF,UAAU,uBAAf,SACE,qBAAKA,UAAU,iBAAf,SACG+C,gB,GA1KwB1C,IAAMC,WCH7CoE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.178e4c26.chunk.js","sourcesContent":["/**\r\n * Calculates the sum of a row in the puzzle array\r\n */\r\nexport function calculateRow(arr, i) {\r\n  if (i >= arr.length)\r\n    return 0;\r\n\r\n  return eval(arr[i].join(\" \").trim());\r\n}\r\n\r\n/**\r\n *  Get a column from the puzzle array\r\n */\r\nexport function getCol(arr, i) {\r\n  if (i >= arr.length)\r\n    return null;\r\n\r\n  return arr.map(x => x[i]);\r\n}\r\n\r\n/**\r\n *  Calculates the sum of a column in the puzzle array\r\n */\r\nexport function calculateCol(arr, i) {\r\n  if (i >= arr.length)\r\n    return 0;\r\n  \r\n  return eval(getCol(arr, i).join(\" \").trim());\r\n}\r\n\r\n/**\r\n *  Calculates all row sums and populates an array with the results\r\n */\r\nexport function calculateRowSums(arr, size) {\r\n  let rowSums = [];\r\n  for (let i = 0; i < (size*2)-1; i++) {\r\n    if (i%2===0) {\r\n      // Try replacing operations with division\r\n      for (let j = 1; j < arr.length; j+=2) {\r\n        if (arr[i][j] === '+' || arr[i][j] === '-' || arr[i][j] === '*') {\r\n          let original = arr[i][j];\r\n          arr[i][j] = '/';\r\n          let sum = calculateRow(arr, i); \r\n          if (sum - Math.floor(sum) !== 0) // Revert operation if sum wasn't an integer\r\n            arr[i][j] = original;\r\n        }\r\n      }\r\n      rowSums.push(calculateRow(arr, i));\r\n    }\r\n  }\r\n  return rowSums;\r\n}\r\n\r\n/**\r\n *  Calculates all column sums and populates an array with the results\r\n */\r\nexport function calculateColSums(arr, size) {\r\n  let colSums = [];\r\n  for (let i = 0; i < (size*2)-1; i++) {\r\n    if (i%2===0) {\r\n      let col = getCol(arr, i);\r\n      for (let j = 1; j < col.length; j+=2) {\r\n        if (col[j] === '+' || col[j] === '-' || col[j] === '*') {\r\n          let original = col[j];\r\n          arr[j][i] = '/';\r\n          let sum = calculateCol(arr, i);\r\n          if (sum - Math.floor(sum) !== 0)\r\n            arr[j][i] = original;\r\n        }\r\n      }\r\n      colSums.push(calculateCol(arr, i));\r\n    }\r\n  }\r\n  return colSums;\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nexport default class Button extends React.Component {\r\n  static propTypes = {\r\n    handleClick: PropTypes.func,\r\n    text: PropTypes.string,\r\n    green: PropTypes.bool\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.handleClick();\r\n  }\r\n\r\n  render() {\r\n    const className = [\r\n      \"component-button\",\r\n      this.props.green ? \"green\" : \"red\"\r\n    ];\r\n\r\n    return (\r\n      <div className={className.join(\" \").trim()}>\r\n        <button onClick={this.handleClick}>\r\n          {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/add.47d179f1.svg\";","export default __webpack_public_path__ + \"static/media/subtract.ed1583fb.svg\";","export default __webpack_public_path__ + \"static/media/multiply.05cf6c7f.svg\";","export default __webpack_public_path__ + \"static/media/divide.4be7e1d6.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./GridSquare.css\";\r\nimport addIcon from \"./img/add.svg\";\r\nimport subtractIcon from \"./img/subtract.svg\";\r\nimport multiplyIcon from \"./img/multiply.svg\";\r\nimport divideIcon from \"./img/divide.svg\";\r\n\r\nexport default class GridSquare extends React.Component {\r\n  static propTypes = {\r\n    row: PropTypes.number,\r\n    col: PropTypes.number,\r\n    handleInput: PropTypes.func,\r\n    white: PropTypes.bool,\r\n    operation: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n    value: PropTypes.string,\r\n    puzzleSize: PropTypes.number,\r\n    greenText: PropTypes.bool,\r\n    redText: PropTypes.bool,\r\n    text: PropTypes.string\r\n  };\r\n\r\n  handleClick = () => {\r\n    if (typeof this.input !== \"undefined\") \r\n      this.input.focus();\r\n  }\r\n\r\n  handleInput = (event) => {\r\n    this.props.handleInput(this.props.row, this.props.col, event.target.value);\r\n  }\r\n\r\n  renderContent() {\r\n    if (this.props.readOnly) {\r\n      if (this.props.operation) {\r\n        return (\r\n          <div className=\"operation\">\r\n            <img src={this.props.value===\"+\" ? addIcon : \r\n                      this.props.value===\"-\" ? subtractIcon :\r\n                      this.props.value===\"*\" ? multiplyIcon :\r\n                      divideIcon} />\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div className=\"text\">\r\n          {this.props.value}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <input type=\"text\" \r\n          maxLength={this.props.puzzleSize===4 ? 2 : 1} \r\n          ref={(inp) => this.input = inp}\r\n          className={this.props.puzzleSize===3 ? \"single-digit\" : \"double-digit\"}\r\n          onChange={this.handleInput}\r\n          value={this.props.text}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const className = [\r\n      \"component-grid-square\",\r\n      this.props.white ? \"white\" : \"black\",\r\n      this.props.readOnly ? \"\" : \"input\",\r\n      this.props.greenText ? \"green-text\" : \"\",\r\n      this.props.redText ? \"red-text\" : \"\"\r\n    ];\r\n\r\n    let content = this.renderContent();\r\n\r\n    return (\r\n      <div className={className.join(\" \").trim()} onClick={this.handleClick}>\r\n        <div className=\"content\">\r\n          <div className=\"text-container\">\r\n            {content}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/check.baf3a965.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Popup.css\";\r\nimport check from \"./img/check.svg\";\r\n\r\nexport default class Popup extends React.Component {\r\n  static propTypes = {\r\n    toggle: PropTypes.func,\r\n    text: PropTypes.string\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.toggle();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal-content\">\r\n          <span className=\"close\" onClick={this.handleClick}>&times;</span><br />\r\n          <div className=\"modal-icon\">\r\n            <img src={check} />\r\n          </div>\r\n          <p>{this.props.text}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import * as calc from './calculate.js'\r\n\r\n/**\r\n * Given the size of a sum, generate and return a new puzzle.\r\n */\r\nexport default function generatePuzzle(size) {\r\n  let numbers = [];\r\n  for (let i = 0; i < size*size; i++) \r\n    numbers.push(i+1);\r\n\r\n  // shuffle array\r\n  for (let i = numbers.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i+1));\r\n    [numbers[i], numbers[j]] = [numbers[j], numbers[i]];\r\n  }\r\n\r\n  let symbols = ['+', '-', '*', '/'];\r\n  let evalArr = [];\r\n  for (let i = 0; i < (size*2)-1; i++) {\r\n    let innerArr = [];\r\n    for (let j = 0; j < (size*2)-1; j++) {\r\n      if (j%2===0 && i%2===0) \r\n        innerArr.push(numbers.shift());\r\n      else if ((j%2===0 && i%2!==0) || (j%2!==0 && i%2===0))\r\n        innerArr.push(symbols[Math.floor(Math.random() * 3)]);\r\n      else\r\n        innerArr.push(\"\");\r\n    }\r\n    evalArr.push(innerArr);\r\n  }\r\n  \r\n  let rowSums = calc.calculateRowSums(evalArr, size);\r\n  let colSums = calc.calculateColSums(evalArr, size);\r\n\r\n  return ({\r\n    arr: evalArr,\r\n    rowSums: rowSums,\r\n    colSums: colSums\r\n  });\r\n}","import React from \"react\"\r\nimport './SumPuzzle.css';\r\nimport Button from \"./Button\";\r\nimport GridSquare from \"./GridSquare\";\r\nimport Popup from \"./Popup\";\r\nimport generatePuzzle from \"../logic/generatePuzzle\";\r\nimport { calculateRow, calculateCol } from \"../logic/calculate\";\r\n\r\nexport default class SumPuzzle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.size = 3;\r\n    this.puzzle = generatePuzzle(3);\r\n\r\n    this.state = {\r\n      grid: [],\r\n      popupVisible: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeGrid();\r\n  }\r\n\r\n  initializeGrid = () => {\r\n    let copy = false;\r\n    let grid = [];\r\n    for (let i = 0; i < this.size*2-1; i++) {\r\n      let inner = [];\r\n      for (let j = 0; j < this.size*2-1; j++) {\r\n        if (copy)\r\n          inner[j] = this.puzzle.arr[i][j];\r\n        else\r\n          inner[j] = \"\";\r\n        copy = !copy;\r\n      }\r\n      grid.push(inner);\r\n    }\r\n    this.setState({grid: grid});\r\n  }\r\n\r\n  handleInput = (row, col, value) => {\r\n    this.setState({\r\n      grid: this.state.grid.map((r, i) => r.map((c, j) => {\r\n        return i===row && j===col ? value : c;\r\n      }))\r\n    }, () => {\r\n      if (this.isPuzzleComplete() && this.isPuzzleCorrect())\r\n        this.setState({popupVisible: true});\r\n    }); \r\n  }\r\n\r\n  togglePopup = () => {\r\n    this.setState({popupVisible: !this.state.popupVisible});\r\n  }\r\n\r\n  newGame = () => {\r\n    this.setState({grid: []});\r\n    this.size = 3;\r\n    this.puzzle = generatePuzzle(3);\r\n    this.initializeGrid();\r\n  }\r\n\r\n  isRowComplete = (row) => {\r\n    if (typeof this.state.grid[row] === \"undefined\")\r\n      return false;\r\n\r\n    for (let i = 0; i < this.state.grid[row].length; i++) {\r\n      if (!this.state.grid[row][i])\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isRowCorrect = (row) => {\r\n    return calculateRow(this.state.grid, row) === this.puzzle.rowSums[row/2];\r\n  }\r\n\r\n  isColComplete = (col) => {\r\n    for (let i = 0; i < this.state.grid.length; i++) {\r\n      if (!this.state.grid[i][col])\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isColCorrect = (col) => {\r\n    return calculateCol(this.state.grid, col) === this.puzzle.colSums[col/2];\r\n  }\r\n\r\n  isPuzzleComplete = () => {\r\n    for (let i = 0; i < this.size*2-1; i+=2) {\r\n      if (!this.isRowComplete(i) || !this.isColComplete(i))\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isPuzzleValid = () => {\r\n    const gridSet = new Set();\r\n    for (let i = 0; i < this.size*2-1; i+= 2) {\r\n      for (let j = 0; j < this.size*2-1; j+=2) {\r\n        if (this.state.grid[i][j] > 0 && this.state.grid[i][j] <= this.size*this.size)\r\n          gridSet.add(this.state.grid[i][j]);\r\n      }\r\n    }\r\n\r\n    if (gridSet.size != this.size*this.size)\r\n      return false;\r\n    else\r\n      return true;\r\n  }\r\n\r\n  isPuzzleCorrect = () => {\r\n    for (let i = 0; i < this.size*2-1; i+=2) {\r\n      if (!this.isRowComplete(i) || !this.isColComplete(i))\r\n        return false;\r\n      if (!this.isRowCorrect(i) || !this.isColCorrect(i))\r\n        return false;\r\n    }\r\n    return this.isPuzzleValid();\r\n  }\r\n\r\n  renderSquare(row, col) {\r\n    let end = (typeof this.size === \"undefined\" ? 5 : this.size*2-1);\r\n    let text = \"\";\r\n    if (typeof this.puzzle.arr !== \"undefined\") {\r\n      if (col < end && row < end)\r\n        text = this.puzzle.arr[row][col];\r\n      if (col === end && row%2 === 0)\r\n        text = \"=\" + this.puzzle.rowSums[Math.floor(row/2)];\r\n      if (row === end && col%2 === 0)\r\n        text = \"=\" + this.puzzle.colSums[Math.floor(col/2)];\r\n    }\r\n\r\n    let colCorrect = (row===end && this.isColComplete(col) && this.isColCorrect(col));\r\n    let colIncorrect = (row===end && this.isColComplete(col) && !this.isColCorrect(col));\r\n    let rowCorrect = (col===end && this.isRowComplete(row) && this.isRowCorrect(row));\r\n    let rowIncorrect = (col===end && this.isRowComplete(row) && !this.isRowCorrect(row));\r\n\r\n    return(<GridSquare \r\n      key={\"id\"+row+\"-\"+col}\r\n      row={row} \r\n      col={col} \r\n      white={row!==end && col!==end && (row%2 === 0 || col%2 === 0)}\r\n      value={\"\"+text}\r\n      readOnly={row%2===0 && col%2===0 ? false : true}\r\n      operation={row!==end && col!==end && ((row%2===0 && col%2!==0) || (row%2!==0 && col%2===0))}\r\n      puzzleSize={this.size}\r\n      handleInput={this.handleInput}\r\n      greenText={colCorrect || rowCorrect}\r\n      redText={colIncorrect || rowIncorrect}\r\n      text={typeof this.state.grid[row] === \"undefined\" ? \"\" : this.state.grid[row][col]}\r\n    />);\r\n  }\r\n\r\n  render() {\r\n    const grid = [];\r\n    for (var i = 0; i < 6; i++) {\r\n      for (var j = 0; j < 6; j++)\r\n        grid.push(this.renderSquare(i, j));\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.popupVisible ? <Popup text=\"Congrats! You solved the puzzle!\" toggle={this.togglePopup}/> : null} \r\n        <div className=\"app-content\">\r\n          <div className=\"divider-line\" />\r\n          <div className=\"button-bar\">\r\n            <div className=\"button-container\">\r\n              <Button text={\"New Game\"} handleClick={this.newGame} green={true}/>\r\n            </div>\r\n            <div className=\"button-container\">\r\n              <a href=\"about.html\"><Button text={\"How to Play\"} green={false} /></a>\r\n            </div>\r\n          </div>\r\n          <div className=\"component-sum-puzzle\">\r\n            <div className=\"grid-container\">\r\n              {grid}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SumPuzzle from './components/SumPuzzle';\r\n\r\nReactDOM.render(\r\n  <SumPuzzle />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}